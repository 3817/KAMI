plugins {
    id 'fabric-loom' version '0.2.6-SNAPSHOT'
    id 'maven-publish'
}

sourceCompatibility = targetCompatibility = JavaVersion.VERSION_1_8

version = minecraft_version + "-" + mod_version
group = "me.zeroeightsix"

minecraft {}

repositories {
    jcenter()
    maven {
        name = "jitpack.io"
        url = "https://jitpack.io"
    }
    maven {
        name = 'impactdevelopment-repo'
        url = 'https://impactdevelopment.github.io/maven/'
    }
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modCompile "net.fabricmc:fabric-loader:${project.loader_version}"

    compile "com.github.ZeroMemes:Alpine:1.5"
    compile group: 'net.jodah', name: 'typetools', version: '0.5.0'
    compile group: 'org.yaml', name: 'snakeyaml', version: '1.19'
    compile(group: 'org.reflections', name: 'reflections', version: '0.9.11') {
        exclude group: 'com.google.guava', module: 'guava'
    }
}

processResources {
    inputs.property "version", project.version

    from(sourceSets.main.resources.srcDirs) {
        include "fabric.mod.json"
        expand "version": project.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude "fabric.mod.json"
    }
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = "sources"
    from sourceSets.main.allSource
}

jar {
    from "LICENSE"
}

// extra kami tasks

task mkdir {
    group = "kami"
    doLast {
        mkdir System.getProperty("user.home") + "/.minecraft/mods/1.12.2/"
    }
}

task rmOld(type: Delete) {
    group = "kami"
    delete fileTree(System.getProperty("user.home") + "/.minecraft/mods/1.12.2/").matching {
        include "*-release.jar"
    }
}

task copy(type: Copy) {
    group = "kami"
    from file("build/libs/")
    include '*-release.jar'
    into file(System.getProperty("user.home") + "/.minecraft/mods/1.12.2/")
}